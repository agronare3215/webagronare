*** Begin Patch
*** Add File: Dockerfile
+FROM node:20-bullseye-slim
+RUN apt-get update && apt-get install -y --no-install-recommends \
+    ca-certificates \
+    fonts-liberation \
+    libasound2 \
+    libatk-bridge2.0-0 \
+    libatk1.0-0 \
+    libc6 \
+    libcairo2 \
+    libdrm2 \
+    libgbm1 \
+    libglib2.0-0 \
+    libgtk-3-0 \
+    libnspr4 \
+    libnss3 \
+    libpango-1.0-0 \
+    libx11-6 \
+    libx11-xcb1 \
+    libxcb1 \
+    libxcomposite1 \
+    libxdamage1 \
+    libxrandr2 \
+    libxss1 \
+    lsb-release \
+    wget \
+    fonts-dejavu-core \
+ && rm -rf /var/lib/apt/lists/*
+WORKDIR /usr/src/app
+COPY package*.json ./
+RUN npm ci --only=production
+COPY . .
+RUN mkdir -p /usr/src/app/comprobantes && chown -R node:node /usr/src/app/comprobantes
+ENV PORT=3000
+EXPOSE 3000
+USER node
+CMD ["node", "server.js"]
+
*** End Patch
*** Begin Patch
*** Add File: docker-compose.yml
+version: "3.8"
+services:
+  web:
+    build:
+      context: .
+      dockerfile: Dockerfile
+    env_file:
+      - .env
+    ports:
+      - "${PORT:-3000}:3000"
+    volumes:
+      - ./:/usr/src/app:delegated
+    environment:
+      - NODE_ENV=development
+      - PUPPETEER_EXECUTABLE_PATH=${PUPPETEER_EXECUTABLE_PATH:-}
+    stdin_open: true
+    tty: true
+
*** End Patch
*** Begin Patch
*** Add File: .dockerignore
+node_modules
+comprobantes
+.env
+*.log
+.vscode
+.git
+README.md
+
*** End Patch
*** Begin Patch
*** Add File: env.example
+PORT=3000
+GOOGLE_MAPS_KEY=
+GEMINI_API_KEY=
+SENDGRID_API_KEY=
+SMTP_URL=
+FROM_EMAIL=no-reply@agronare.com
+PUPPETEER_EXECUTABLE_PATH=
+
*** End Patch
*** Begin Patch
*** Update File: README.md
@@
-# webagronare
+# webagronare
+
+## Docker / local dev
+
+1. Copy `.env.example` to `.env` and fill your keys (do **not** commit `.env`).
+2. Build & run with Docker Compose:
+
+```bash
+docker-compose up --build
+```
+
+3. Server will be available on `http://localhost:3000` (or the port in `.env`).
+
+### Notes
+- Put your Google Maps JS key in `GOOGLE_MAPS_KEY` (restrict key by HTTP referrers in Google Cloud Console).
+- Put server-only secrets (Gemini, SendGrid) in `GEMINI_API_KEY` and `SENDGRID_API_KEY`.
+
*** End Patch
